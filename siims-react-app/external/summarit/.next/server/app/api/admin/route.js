"use strict";(()=>{var e={};e.id=90,e.ids=[90],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2615:e=>{e.exports=require("http")},8791:e=>{e.exports=require("https")},8621:e=>{e.exports=require("punycode")},6162:e=>{e.exports=require("stream")},7360:e=>{e.exports=require("url")},1568:e=>{e.exports=require("zlib")},6837:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>g,patchFetch:()=>y,requestAsyncStorage:()=>f,routeModule:()=>m,serverHooks:()=>N,staticGenerationAsyncStorage:()=>h});var s={};t.r(s),t.d(s,{GET:()=>l,OPTIONS:()=>c,POST:()=>p});var o=t(9303),n=t(8716),a=t(670),i=t(7070),d=t(1926);let u={"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, PUT, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization","Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache",Expires:"0"};async function c(){return new i.NextResponse(null,{status:204,headers:u})}async function l(e){try{let r=new URL(e.url),t=r.searchParams.get("action"),s=r.searchParams.get("section"),o=r.searchParams.get("studentId");if("listStudents"===t&&s)try{console.log("Fetching students for section:",s);let e=await (0,d.sK)(s);return console.log("Students fetched:",e),i.NextResponse.json(e,{headers:u})}catch(e){return console.error("Error fetching students:",e.message,e.stack),i.NextResponse.json({error:"Failed to fetch students",details:e.message},{status:500,headers:u})}if("getCompanies"===t)try{let{data:e,error:r}=await d.OQ.from("Company").select("id, name, address, supervisor, contactNumber").order("name");if(r)throw r;return i.NextResponse.json(e||[],{headers:u})}catch(e){return console.error("Error fetching companies:",e),i.NextResponse.json({error:"Failed to fetch companies"},{status:500,headers:u})}if("getCoordinatorSections"===t)try{let e=r.searchParams.get("coordinatorId"),t=d.OQ.from("Coordinator").select("sections").eq("approved",!0);e&&(t=t.eq("coordinatorId",Number(e)));let{data:s,error:o}=await t;if(o)throw o;let n=new Set;return s?.forEach(e=>{e.sections&&Array.isArray(e.sections)&&e.sections.forEach(e=>n.add(e))}),i.NextResponse.json(Array.from(n).sort(),{headers:u})}catch(e){return console.error("Error fetching coordinator sections:",e),i.NextResponse.json({error:"Failed to fetch coordinator sections"},{status:500,headers:u})}if("listAllStudents"===t)try{let{data:e,error:r}=await d.OQ.from("StudentEnrollment").select("studentId, userName, section, companyName").order("studentId");if(r)throw r;return i.NextResponse.json(e||[],{headers:u})}catch(e){return console.error("Error fetching all students:",e),i.NextResponse.json({error:"Failed to fetch students"},{status:500,headers:u})}if("listAllCoordinators"===t)try{let{data:e,error:r}=await d.OQ.from("Coordinator").select("id, coordinatorId, userName, sections, approved").order("userName");if(r){console.warn("listAllCoordinators with coordinatorId failed, falling back:",r?.message);let t=await d.OQ.from("Coordinator").select("id, userName, sections, approved").order("userName");e=t.data,r=t.error}if(r)throw r;return i.NextResponse.json(e||[],{headers:u})}catch(e){return console.error("Error fetching all coordinators:",e),i.NextResponse.json({error:"Failed to fetch coordinators"},{status:500,headers:u})}if("getStudentDetails"===t&&o)try{let{data:e,error:r}=await d.OQ.from("StudentEnrollment").select("*").eq("studentId",o).single();if(r||!e)return i.NextResponse.json({error:"Student not found"},{status:404,headers:u});let{data:t}=await d.OQ.from("Coordinator").select("userName, sections").contains("sections",[e.section]).single(),s=null;if(e.companyName){let{data:r}=await d.OQ.from("Company").select("*").eq("name",e.companyName).single();s=r}return i.NextResponse.json({student:{studentId:e.studentId,userName:e.userName,section:e.section,companyName:e.companyName},coordinator:t?{userName:t.userName,sections:t.sections}:null,company:s},{headers:u})}catch(e){return console.error("Error fetching student details:",e),i.NextResponse.json({error:"Failed to fetch student details"},{status:500,headers:u})}return i.NextResponse.json({error:"Invalid action"},{status:400,headers:u})}catch(e){return console.error("Admin API error:",e),i.NextResponse.json({error:"Admin API failed"},{status:500,headers:u})}}async function p(e){try{let r=await e.json().catch(()=>null);if(!r)return i.NextResponse.json({error:"Invalid JSON"},{status:400,headers:u});if("registerStudent"===r.action){let{studentId:e,userName:t,section:s,companyId:o}=r;if(!e||!s||!o)return i.NextResponse.json({error:"studentId, section, and companyId required"},{status:400,headers:u});try{let{data:r,error:n}=await d.OQ.from("Company").select("name").eq("id",o).single();if(n||!r)return i.NextResponse.json({error:"Company not found"},{status:404,headers:u});let a=await (0,d.LK)({studentId:e,section:s,userName:t||e,companyName:r.name});return i.NextResponse.json({success:!0,message:"Student registered successfully",student:{studentId:a.studentId,userName:a.userName,section:a.section,companyName:a.companyName}},{headers:u})}catch(e){return console.error("Registration error:",e),i.NextResponse.json({error:"Registration failed: "+(e.message||"Unknown error")},{status:500,headers:u})}}if("registerCompany"===r.action){let{name:e,address:t,supervisor:s,contactNumber:o}=r;if(!e)return i.NextResponse.json({error:"Company name is required"},{status:400,headers:u});try{let r={name:e,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};null!=t&&(r.address=t),null!=s&&(r.supervisor=s),null!=o&&(r.contactNumber=o);let{data:n,error:a}=await d.OQ.from("Company").insert([r]).select().single();if(a)throw a;return i.NextResponse.json({success:!0,message:"Company registered successfully",company:{id:n.id,name:n.name,address:n.address||null,supervisor:n.supervisor||null,contactNumber:n.contactNumber||null}},{headers:u})}catch(e){return console.error("Company registration error:",e),i.NextResponse.json({error:"Company registration failed: "+(e.message||"Unknown error")},{status:500,headers:u})}}if("registerCoordinator"===r.action){let{userName:e,sections:t,coordinatorId:s}=r;if(!e)return i.NextResponse.json({error:"userName required"},{status:400,headers:u});if(null==s||isNaN(Number(s)))return i.NextResponse.json({error:"coordinatorId (integer) required"},{status:400,headers:u});try{let r;try{r=await (0,d.aE)({userName:e,coordinatorId:Number(s),sections:Array.isArray(t)?t:[t].filter(Boolean),approved:!0})}catch(s){console.warn("createCoordinator with coordinatorId failed, falling back:",s?.message),r=await (0,d.aE)({userName:e,sections:Array.isArray(t)?t:[t].filter(Boolean),approved:!0})}return i.NextResponse.json({success:!0,message:"Coordinator registered successfully",coordinator:{id:r.id,coordinatorId:r.coordinatorId,userName:r.userName,sections:r.sections,approved:r.approved}},{headers:u})}catch(e){return console.error("Coordinator registration error:",e),i.NextResponse.json({error:"Coordinator registration failed: "+(e.message||"Unknown error")},{status:500,headers:u})}}if("deleteStudent"===r.action){let{studentId:e}=r;if(!e)return i.NextResponse.json({error:"studentId required"},{status:400,headers:u});try{let{error:r}=await d.OQ.from("StudentEnrollment").delete().eq("studentId",e);if(r)throw r;return i.NextResponse.json({success:!0,message:"Student deleted successfully"},{headers:u})}catch(e){return console.error("Delete student error:",e),i.NextResponse.json({error:"Delete student failed: "+(e.message||"Unknown error")},{status:500,headers:u})}}if("deleteCoordinator"===r.action){let{coordinatorId:e}=r;if(!e)return i.NextResponse.json({error:"coordinatorId required"},{status:400,headers:u});try{let{error:r}=await d.OQ.from("Coordinator").delete().eq("id",e);if(r)throw r;return i.NextResponse.json({success:!0,message:"Coordinator deleted successfully"},{headers:u})}catch(e){return console.error("Delete coordinator error:",e),i.NextResponse.json({error:"Delete coordinator failed: "+(e.message||"Unknown error")},{status:500,headers:u})}}if("deleteCompany"===r.action){let{companyId:e}=r;if(!e)return i.NextResponse.json({error:"companyId required"},{status:400,headers:u});try{let{error:r}=await d.OQ.from("Company").delete().eq("id",e);if(r)throw r;return i.NextResponse.json({success:!0,message:"Company deleted successfully"},{headers:u})}catch(e){return console.error("Delete company error:",e),i.NextResponse.json({error:"Delete company failed: "+(e.message||"Unknown error")},{status:500,headers:u})}}if("updateStudent"===r.action){let{studentId:e,userName:t,section:s,companyName:o,newStudentId:n}=r;if(!e)return i.NextResponse.json({error:"studentId required"},{status:400,headers:u});try{let r={userName:t,section:s,companyName:o,updatedAt:new Date().toISOString()};n&&(r.studentId=n);let{error:a}=await d.OQ.from("StudentEnrollment").update(r).eq("studentId",e);if(a)throw a;return i.NextResponse.json({success:!0,message:"Student updated successfully"},{headers:u})}catch(e){return console.error("Update student error:",e),i.NextResponse.json({error:"Update student failed: "+(e.message||"Unknown error")},{status:500,headers:u})}}if("updateCoordinator"===r.action){let{coordinatorId:e,userName:t,sections:s,coordinatorIdValue:o}=r;if(!e)return i.NextResponse.json({error:"coordinatorId (record id) required"},{status:400,headers:u});try{let r={userName:t,sections:s,updatedAt:new Date().toISOString()},{error:n}=await d.OQ.from("Coordinator").update({...r,...null!=o?{coordinatorId:Number(o)}:{}}).eq("id",e);if(n&&/column .*coordinatorId.* does not exist/i.test(n.message||"")&&(console.warn("updateCoordinator coordinatorId update failed, retrying without column:",n.message),n=(await d.OQ.from("Coordinator").update(r).eq("id",e)).error),n)throw n;return i.NextResponse.json({success:!0,message:"Coordinator updated successfully"},{headers:u})}catch(e){return console.error("Update coordinator error:",e),i.NextResponse.json({error:"Update coordinator failed: "+(e.message||"Unknown error")},{status:500,headers:u})}}if("updateCompany"===r.action){let{companyId:e,name:t,address:s,supervisor:o,contactNumber:n}=r;if(!e)return i.NextResponse.json({error:"companyId required"},{status:400,headers:u});try{let r={name:t,updatedAt:new Date().toISOString()};null!=s&&(r.address=s),null!=o&&(r.supervisor=o),null!=n&&(r.contactNumber=n);let{error:a}=await d.OQ.from("Company").update(r).eq("id",e);if(a)throw a;return i.NextResponse.json({success:!0,message:"Company updated successfully"},{headers:u})}catch(e){return console.error("Update company error:",e),i.NextResponse.json({error:"Update company failed: "+(e.message||"Unknown error")},{status:500,headers:u})}}return i.NextResponse.json({error:"Unknown action"},{status:400,headers:u})}catch(e){return console.error("Admin POST error:",e),i.NextResponse.json({error:"Admin POST failed"},{status:500,headers:u})}}let m=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/admin/route",pathname:"/api/admin",filename:"route",bundlePath:"app/api/admin/route"},resolvedPagePath:"C:\\Users\\Admin\\Desktop\\summarize application -Online version\\summarit\\src\\app\\api\\admin\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:f,staticGenerationAsyncStorage:h,serverHooks:N}=m,g="/api/admin/route";function y(){return(0,a.patchFetch)({serverHooks:N,staticGenerationAsyncStorage:h})}},1926:(e,r,t)=>{t.d(r,{GR:()=>l,LK:()=>d,OQ:()=>a,Zn:()=>c,_8:()=>u,aE:()=>p,sK:()=>i});var s=t(4738);let o=process.env.SUPABASE_URL||process.env.NEXT_PUBLIC_SUPABASE_URL,n=process.env.SUPABASE_KEY||process.env.SUPABASE_SERVICE_ROLE_KEY,a=(0,s.createClient)(o,n);async function i(e){let{data:r,error:t}=await a.from("StudentEnrollment").select("*").eq("section",e).order("studentId",{ascending:!0});if(t)throw t;return r||[]}async function d(e){let{data:r,error:t}=await a.from("StudentEnrollment").insert([{...e,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}]).select().single();if(t)throw t;return r}async function u(e,r){let t=a.from("WeeklyReport").select("*");e&&(t=t.eq("section",e)),r&&(t=t.eq("studentId",r));let{data:s,error:o}=await t.order("weekNumber",{ascending:!0});if(o)throw o;return s||[]}async function c(e){let{data:r,error:t}=await a.from("WeeklyReport").insert([{...e,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}]).select().single();if(t)throw t;return r}async function l(e){let{error:r}=await a.from("WeeklyReport").delete().eq("id",e);if(r)throw r;return!0}async function p(e){let{data:r,error:t}=await a.from("Coordinator").upsert([{...e,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}],{onConflict:"userName"}).select().single();if(t)throw t;return r}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[276,175],()=>t(6837));module.exports=s})();